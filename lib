local KnrlN = {}

function KnrlN:CreateWindow(title)
    local UserInputService = game:GetService("UserInputService")

    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = title or "KnrlN_UI"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = game:GetService("CoreGui")

    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, 450, 0, 300)
    mainFrame.Position = UDim2.new(0.5, -225, 0.5, -150)
    mainFrame.BackgroundColor3 = Color3.fromRGB(245, 245, 245)
    mainFrame.BorderSizePixel = 0
    mainFrame.ClipsDescendants = true
    mainFrame.Parent = screenGui

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = mainFrame

    local shadow = Instance.new("ImageLabel")
    shadow.Name = "Shadow"
    shadow.BackgroundTransparency = 1
    shadow.Image = "rbxassetid://1316045217" -- subtle shadow png
    shadow.ImageColor3 = Color3.new(0, 0, 0)
    shadow.ImageTransparency = 0.85
    shadow.ScaleType = Enum.ScaleType.Slice
    shadow.SliceCenter = Rect.new(10, 10, 118, 118)
    shadow.Size = UDim2.new(1, 40, 1, 40)
    shadow.Position = UDim2.new(0, -20, 0, -20)
    shadow.ZIndex = 0
    shadow.Parent = mainFrame

    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1, 0, 0, 40)
    titleBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    titleBar.BorderSizePixel = 0
    titleBar.Parent = mainFrame

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -20, 1, 0)
    titleLabel.Position = UDim2.new(0, 20, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title or "KnrlN UI"
    titleLabel.TextColor3 = Color3.fromRGB(50, 50, 50)
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 24
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = titleBar

    local container = Instance.new("Frame")
    container.Size = UDim2.new(1, 0, 1, -40)
    container.Position = UDim2.new(0, 0, 0, 40)
    container.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    container.Parent = mainFrame

    local cornerCont = Instance.new("UICorner")
    cornerCont.CornerRadius = UDim.new(0, 10)
    cornerCont.Parent = container

    local sidebar = Instance.new("Frame")
    sidebar.Size = UDim2.new(0, 120, 1, 0)
    sidebar.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
    sidebar.BorderSizePixel = 0
    sidebar.Parent = container

    local cornerSide = Instance.new("UICorner")
    cornerSide.CornerRadius = UDim.new(0, 10)
    cornerSide.Parent = sidebar

    local tabListLayout = Instance.new("UIListLayout")
    tabListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    tabListLayout.Padding = UDim.new(0, 10)
    tabListLayout.Parent = sidebar

    tabListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        sidebar.CanvasSize = UDim2.new(0, 0, 0, tabListLayout.AbsoluteContentSize.Y + 20)
    end)

    local contentArea = Instance.new("Frame")
    contentArea.Size = UDim2.new(1, -120, 1, 0)
    contentArea.Position = UDim2.new(0, 120, 0, 0)
    contentArea.BackgroundTransparency = 1
    contentArea.Parent = container

    local tabs = {}
    local tabButtons = {}

    local elements = {}

    function elements:AddTab(tabName)
        local tabButton = Instance.new("TextButton")
        tabButton.Size = UDim2.new(1, -20, 0, 40)
        tabButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        tabButton.BorderSizePixel = 0
        tabButton.Text = tabName or "Tab"
        tabButton.TextColor3 = Color3.fromRGB(80, 80, 80)
        tabButton.Font = Enum.Font.Gotham
        tabButton.TextSize = 18
        tabButton.AutoButtonColor = false
        tabButton.Parent = sidebar
        tabButton.LayoutOrder = #tabButtons + 1

        local cornerBtn = Instance.new("UICorner")
        cornerBtn.CornerRadius = UDim.new(0, 8)
        cornerBtn.Parent = tabButton

        local leftIndicator = Instance.new("Frame")
        leftIndicator.Size = UDim2.new(0, 4, 1, 0)
        leftIndicator.BackgroundColor3 = Color3.fromRGB(0, 120, 255)
        leftIndicator.Visible = false
        leftIndicator.Parent = tabButton

        local function setActive(active)
            if active then
                tabButton.BackgroundColor3 = Color3.fromRGB(230, 245, 255)
                tabButton.TextColor3 = Color3.fromRGB(0, 80, 255)
                leftIndicator.Visible = true
            else
                tabButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                tabButton.TextColor3 = Color3.fromRGB(80, 80, 80)
                leftIndicator.Visible = false
            end
        end

        tabButton.MouseEnter:Connect(function()
            if not leftIndicator.Visible then
                tabButton.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
            end
        end)

        tabButton.MouseLeave:Connect(function()
            if not leftIndicator.Visible then
                tabButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            end
        end)

        local tabContent = Instance.new("Frame")
        tabContent.Size = UDim2.new(1, 0, 1, 0)
        tabContent.BackgroundTransparency = 1
        tabContent.Visible = false
        tabContent.Parent = contentArea

        local tabElements = {}

        function tabElements:AddButton(text, callback)
            local button = Instance.new("TextButton")
            button.Size = UDim2.new(0.9, 0, 0, 40)
            local offset = 0
            for _, child in ipairs(tabContent:GetChildren()) do
                if child:IsA("TextButton") then
                    offset = offset + 50
                end
            end
            button.Position = UDim2.new(0.05, 0, 0, offset)
            button.BackgroundColor3 = Color3.fromRGB(0, 120, 255)
            button.BorderSizePixel = 0
            button.Text = text or "Button"
            button.TextColor3 = Color3.fromRGB(255, 255, 255)
            button.Font = Enum.Font.Gotham
            button.TextSize = 18
            button.AutoButtonColor = false
            button.Parent = tabContent

            local btnCorner = Instance.new("UICorner")
            btnCorner.CornerRadius = UDim.new(0, 6)
            btnCorner.Parent = button

            button.MouseEnter:Connect(function()
                button.BackgroundColor3 = Color3.fromRGB(0, 100, 220)
            end)
            button.MouseLeave:Connect(function()
                button.BackgroundColor3 = Color3.fromRGB(0, 120, 255)
            end)

            button.MouseButton1Click:Connect(function()
                if callback then
                    callback()
                end
            end)

            return button
        end

        tabs[tabButton] = tabContent
        tabButtons[#tabButtons + 1] = tabButton

        tabButton.MouseButton1Click:Connect(function()
            for btn, content in pairs(tabs) do
                if btn == tabButton then
                    setActive(true)
                    content.Visible = true
                else
                    setActive(false)
                    content.Visible = false
                end
            end
        end)

        if #tabButtons == 1 then
            setActive(true)
            tabContent.Visible = true
        end

        return tabElements
    end

    local dragging
    local dragInput
    local dragStart
    local startPos

    local function update(input)
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end

    titleBar.InputBegan:Connect(function(input)
        if
            input.UserInputType == Enum.UserInputType.MouseButton1 or
                input.UserInputType == Enum.UserInputType.Touch
         then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    titleBar.InputChanged:Connect(function(input)
        if
            input.UserInputType == Enum.UserInputType.MouseMovement or
                input.UserInputType == Enum.UserInputType.Touch
         then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)

    return elements
end

return KnrlN
